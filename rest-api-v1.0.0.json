{
    "swagger": "2.0",
    "info": {
        "title": "callstats REST API",
        "description": "
        Monitor any real-time app with the callstats API. \n
        <b> We support only HTTP 2.0 enabled client endpoints</b>\n
        # Steps to integrate\n
        All the messages between the WebRTC endpoint and the REST API during the call are shown in the following figures, represented as sequence diagrams.\n
        ## Step 1\n
        At the beginning of the call, the service needs to be authenticated. When the authentication succeeds, a 'token' is sent back to the WebRTC endpoint. The received 'token' is then used for sending events and stats.\n
        <img src='images/step1-MessageFlowRESTAPI.png' />\n
        After the authentication process is completed, the endpoint initiates the monitoring process by a sending userJoined event along with the newly acquired 'token'. In case of success the response contains ucID. By acquiring ucID and 'token' the endpoint allowed to send events and stats.\n
        ## Step 2\n
        Throughout the duration of the call the WebRTC endpoint is obligated to send userAlive event in every 10 seconds. For initiating the call the endpoint requires to send fabricSetup event.\n
        <img src='images/step2-MessageFlowRESTAPI.png' />\n
        ## Step 3\n
        WebRTC endpoint can now send stats to REST API regularly and  all the stats messages are acknowledged.\n
        <img src='images/step3-MessageFlowRESTAPI.png' />\n
        ## Step 4\n
        The WebRTC endpoint informs the REST API about the end of the call by sending fabricTermination event. After the event is acknowledged, the endpoint sends the userLeft event, which removes the user from the conference. Once the last participant sends the userLeft event,  the conference is terminated.\n
        <img src='images/step4-MessageFlowRESTAPI.png' />\n

        ",
        "version": "1.0.0"
    },
    "host": "HOSTNAME",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/authenticate": {
            "post": {
                "externalDocs": {
                    "url": "//tools.ietf.org/html/rfc6749#section-4.1.3",
                    "description": "OAuth2 Access Token Request"
                },
                "summary": "Token request",
                "description": "<b>HOSTNAME: auth.callstats.io</b><br />",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "grant_type",
                        "required": true,
                        "in": "formData",
                        "description": "Must be set to \"authorization_code\"",
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "required": true,
                        "in": "formData",
                        "description": "JWT signed ApplicationToken with alg set to ES256",
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "required": true,
                        "in": "formData",
                        "description": "localID@appID ( localID is provided by the developer and MUST NOT be null or empty and Application ID is obtained from callstats.io)",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "A new token",
                        "schema": {
                            "$ref": "#/definitions/AccessToken"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/AuthenticationError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/AuthenticationError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}": {
            "post": {
                "summary": "User joined / Create conference event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />This is the first step to add a new participant to the list of conference participants or start a new conference. If there are no participants in the given conference then a new conference will be created with the conferenceID provided.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserJoinedMessageBody"
                        }
                    }
                ],
                "tags": [
                    "User Action Events"
                ],
                "responses": {
                    "200": {
                        "description": "Conference successfully joined/created.",
                        "schema": {
                            "$ref": "#/definitions/ucIDResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/user/alive": {
            "post": {
                "summary": "User alive event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />UserAlive makes sure that the user is present in the conference\n. We recommend you send this event every 10 seconds.\n If there is no userAlive event from a particular user for more than 30 seconds, we assume that the user has left the conference.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commonHeaderParams"
                        }
                    }
                ],
                "tags": [
                    "User Action Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/userdetails": {
            "post": {
                "summary": "User details event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br /> You can submit the user details such as username using this event.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDetailsBody"
                        }
                    }
                ],
                "tags": [
                    "User Action Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/user/left": {
            "post": {
                "summary": "User left event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />User left event should be sent when a user leaves the conference.\nThis event removes the user from the list of conference participants.\nThe conference will be closed when all the users have left or timed out.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commonHeaderParams"
                        }
                    }
                ],
                "tags": [
                    "User Action Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric/setup": {
            "post": {
                "summary": "Fabric setup event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />These are connection related events, it should be sent during initial fabric setup phase. After this connection is setup and you can send data) \n ",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric/setupfailed": {
            "post": {
                "summary": "Fabric setup failed event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />These are connection related events, it should be sent when fabric setup fails. This means connection has failed and you cannot send data)\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricSetupFailedBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },

        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric/terminated": {
            "post": {
                "summary": "Fabric terminated event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />These are connection related events, it should be sent when fabric is terminated. This means connection has ended and you cannot send data)\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricTerminatedBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric/statechange": {
            "post": {
                "summary": "Fabric state change event",
                "description": "Whenever the ICE connection state changes or ICE gathering state changes or signaling state changes then this event should be sent.\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricStateChangeBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric/transportchange": {
            "post": {
                "summary": "Fabric transport change event",
                "description": "Whenever the fabric transport changes this event should be called.\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricTransportChangeBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric/status": {
            "post": {
                "summary": "Fabric dropped event",
                "description": "Whenever the fabric is dropped, this should be notified.\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricStatusBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric/actions": {
            "post": {
                "summary": "Fabric action event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br /> When the fabric hold or resume events happen, this event can be submitted\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricActionsBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/stats": {
            "post": {
                "summary": "Conference stats submission",
                "description": "<b>HOSTNAME: stats.callstats.io</b><br />All the conference stats inlcuding tracks, candidatePairs,trasnports, msts, dataChannels, codes and timestamps can be submitted using this event. For the time being tracks, candidatePairs and timestamp are mandatory fields. \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/statsData"
                        }
                    }
                ],
                "tags": [
                    "Stats submission"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/stats/system": {
            "post": {
                "summary": "System status stats submission",
                "description": "<b>HOSTNAME: stats.callstats.io</b><br />Submitting System status information for a conference such as battery level, cpu , etc.\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemStatusBody"
                        }
                    }
                ],
                "tags": [
                    "Stats submission"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status": {
            "post": {
                "summary": "ICE disruption start event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE disruption starts, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceDisruptionStartBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status ": {
            "post": {
                "summary": "ICE disruption end event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE disruption ends, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceDisruptionEndBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status  ": {
            "post": {
                "summary": "ICE restart event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE restarts, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceRestartedBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status   ": {
            "post": {
                "summary": "ICE failed event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE fails, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceFailedBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status    ": {
            "post": {
                "summary": "ICE Aborted event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE Aborts, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceAbortedBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status     ": {
            "post": {
                "summary": "ICE Terminated event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE Terminates, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceTerminatedBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status      ": {
            "post": {
                "summary": "ICE connection disruption start event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE connection disruption starts, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceConnectionDisruptionStartBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ice/status       ": {
            "post": {
                "summary": "ICE connection disruption end event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />\n When ICE connection disrutption ends, this event should be submitted \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iceConnectionDisruptionEndBody"
                        }
                    }
                ],
                "tags": [
                    "ICE Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/media/actions": {
            "post": {
                "summary": "Media action events",
                "description": "<b>HOSTNAME: events.callstats.io</b><br /> When a participant mutes/unmute the audio, pauses/resumes the video, or starts/stops screensharing, this event can be submitted\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mediaActionsBody"
                        }
                    }
                ],
                "tags": [
                    "Media Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/media/pipeline": {
            "post": {
                "summary": "Media playback event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br /> When the media playback starts, suspended or stalls, this event can be submitted\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mediaPipelineBody"
                        }
                    }
                ],
                "tags": [
                    "Media Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/devices/list": {
            "post": {
                "summary": "Connected/Active devices event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />Information about the connected and/or active media devices.\nAvailable eventTypes are given below:\n   - connectedDeviceList (All the media devices connected to the endpoint) \n   - activeDeviceList (Active media devices used by the endpoint) \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devicelistBody"
                        }
                    }
                ],
                "tags": [
                    "Device Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/app/logs": {
            "post": {
                "summary": "Application error logs event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br /> You can submit application error logs using this event. You will be able to search for them and also categorize them.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appLogBody"
                        }
                    }
                ],
                "tags": [
                    "special events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/feedback": {
            "post": {
                "summary": "Conference user feedback event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />You can submit overall rating to conference and add comments as well. It is also possible to give separate ratings for audio and video.\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userFeedbackBody"
                        }
                    }
                ],
                "tags": [
                    "special events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/dominantspeaker": {
            "post": {
                "summary": "Dominant speaker event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />Using this event, you can specify the dominant speaker of the conference. For reference you can check this link: http://www.sciencedirect.com/science/article/pii/S0885230812000186 \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": 256
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dominantSpeakerBody"
                        }
                    }
                ],
                "tags": [
                    "special events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/ssrcmap": {
            "post": {
                "summary": "SSRC map event",
                "description": "Whenever new media track appears, for example a new participant joins or new media sources are added, this event should be notified. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssrcMapBody"
                        }
                    }
                ],
                "tags": [
                    "special events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/sdp": {
            "post": {
                "summary": "SDP event",
                "description": "PRO feature: Whenever there is an updated SDP or a pair of local and remote SDPs, this can be sent to callstats.io.\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sdpSubmissionBody"
                        }
                    }
                ],
                "tags": [
                    "special events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/stats/bridge/status": {
            "post": {
                "summary": "Bridge statistics event",
                "description": "<b>HOSTNAME: stats.callstats.io</b><br />All the bridge statistics can be sent using this event\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bridgeStatsBody"
                        }
                    }
                ],
                "tags": [
                    "Bridge Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/stats/bridge/alive": {
            "post": {
                "summary": "Bridge alive event",
                "description": "<b>HOSTNAME: stats.callstats.io</b><br />All the bridges should send a keep alive message every 30 seconds\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commonHeaderParams"
                        }
                    }
                ],
                "tags": [
                    "Bridge Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },


      }, "definitions": {

        "AccessToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "-064b-4a76-8a2d-d686ec773992"
                },
                "expires_in": {
                    "type": "integer",
                    "example": 3600
                },
                "token_type": {
                    "type": "string",
                    "example": "bearer"
                }
            }
        },
        "AuthenticationError": {
          "type": "object",
          "properties": {
              "error": {
                  "type": "string",
                  "example": "invalid_request"
              },
              "errorReason": {
                  "type": "string",
                  "description": "Human readable error reason"
              },
              "urn:x-callstats:auth:errorActions": {
                  "description": "Suggested actions (e.g. retry, retry with new token, report error)",
                  "type": "array",
                  "items": {
                      "type": "object"
                  }
              }
          }
      },
      "ucIDResponse": {
          "type": "object",
          "required": [
              "status"
          ],
          "properties": {
              "status": {
                  "type": "string",
                  "default": "success",
                  "description": "Always \"success\""
              },
              "ucID": {
                  "type": "string",
                  "description": "Unique identifier"
              }
          }
      },
      "successResponse": {
          "type": "object",
          "required": [
              "status",
              "msg"
          ],
          "properties": {
              "status": {
                  "type": "string",
                  "default": "success",
                  "description": "Always \"success\""
              },
              "msg": {
                  "type": "string",
                  "description": "Error message"
              }
          }
      },
      "invalidRequest": {
          "type": "object",
          "required": [
              "status",
              "msg"
          ],
          "properties": {
              "status": {
                  "type": "string",
                  "default": "error",
                  "description": "Always \"error\""
              },
              "msg": {
                  "type": "string",
                  "description": "Error message"
              }
          }
      },
      "unauthorizedRequest": {
          "type": "object",
          "required": [
              "status",
              "msg"
          ],
          "properties": {
              "status": {
                  "type": "string",
                  "default": "error",
                  "description": "Always \"error\""
              },
              "msg": {
                  "type": "string",
                  "description": "Error message"
              }
          }
      },
      "invalidRequestBody": {
          "type": "object",
          "required": [
              "status",
              "msg"
          ],
          "properties": {
              "status": {
                  "type": "string",
                  "default": "error",
                  "description": "Always \"error\""
              },
              "msg": {
                  "type": "string",
                  "description": ""
              }
          }
      },
      "internalServerResponse": {
          "type": "object",
          "required": [
              "status",
              "msg"
          ],
          "properties": {
              "status": {
                  "type": "string",
                  "default": "error",
                  "description": "Always \"error\""
              },
              "msg": {
                  "type": "string",
                  "description": ""
              }
          }
      },
      "serviceUnavailableResponse": {
          "type": "object",
          "required": [
              "status",
              "msg"
          ],
          "properties": {
              "status": {
                  "type": "string",
                  "default": "error",
                  "description": "Always \"error\""
              },
              "msg": {
                  "type": "string",
                  "description": "Error message"
              }
          }
      },
      "UserJoinedMessageBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "endpointInfo"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "endpointInfo": {
                  "$ref": "#/definitions/endpointInfo"
              }
          }
      },
      "endpointInfo": {
          "type": "object",
          "required": [
              "type"
          ],
          "properties": {
              "type": {
                  "type": "string",
                  "enum": [
                      "browser",
                      "native",
                      "plugin",
                      "middlebox"
                  ]
              },
              "os": {
                  "type": "string",
                  "description":"Operating System name"
              },
              "osVersion": {
                  "type": "string",
                  "description":"Operating System version"
              },
              "buildName": {
                  "type": "string",
                  "description":"Name of the platform that runs the application (example: Chrome or FireFox or Edge or Safari or WebView (https://developer.chrome.com/multidevice/webview/overview) or plugin or Electron or node-webkit(https://github.com/nwjs/nw.js/wiki))"
              },
              "buildVersion": {
                  "type": "string",
                  "description":"Version associated with the platform"
              },
              "appVersion": {
                  "type": "string",
                  "description":"Version of your application "
              }
          }
      },
      "commonHeaderParams": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              }
          }
      },
      "UserDetailsBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "userName"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "userName": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "The name of the user."

              },
          }
      },
      "appLogBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "level",
              "message",
              "messageType"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "level": {
                  "type": "string",
                  "enum":["debug", "info", "warn", "error", "fatal"]
              },
              "message": {
                  "type": "string",
                  "description":"Application error message"
              },
              "messageType": {
                  "type": "string",
                  "enum":["text", "json", "domError"]
              }
          }
      },
      "fabricStateChangeBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "prevState",
              "newState",
              "changedState",
              "remoteID",
              "connectionID"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "prevState": {
                  "type": "string",
                  "enum": [
                    "stable",
                    "have-local-offer", "have-remote-offer", "have-local-pranswer", "have-remote-pranswer", "closed",
                    "new", "connecting", "connected", "disconnected", "failed",
                    "checking","completed",
                    "gathering", "complete"
                  ]
              },
              "newState": {
                  "type": "string",
                  "enum": [
                      "stable",
                      "have-local-offer", "have-remote-offer", "have-local-pranswer", "have-remote-pranswer", "closed",
                      "new", "connecting", "connected", "disconnected", "failed",
                      "checking","completed",
                      "gathering", "complete"
                    ]
              },
              "changedState": {
                  "type": "string",
                  "enum": ["signalingState", "connectionState" , "iceConnectionState", "iceGatheringState"]
              }
          }
      },
      "ssrcMapBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "ssrcData",
              "remoteID",
              "connectionID"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "ssrcData": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ssrcInfoObj"
                  }
              }
          }
      },
      "fabricTransportChangeBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "remoteID",
              "connectionID",
              "currIceCandidatePair",
              "prevIceCandidatePair",
              "currIceConnectionState",
              "prevIceConnectionState",
              "delay"

          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "currIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "prevIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "currIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "connected", "completed"
                  ]
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "connected", "completed"
                  ]
              },
              "delay": {
                  "type": "number",
                  "description": "delay in milliseconds (example: 3.5 seconds is 3500 in milliseconds)"
              },
              "relayType": {
                  "type": "string",
                  "enum": [
                      "turn/udp",
                      "turn/tcp",
                      "turn/tls"
                  ]
              }
          }
      },
      "sdpSubmissionBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "remoteID",
              "connectionID"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "localSDP": {
                  "type": "string",
                  "description": "Stringified SDP of the local user "
              },
              "remoteSDP": {
                  "type": "string",
                  "description":"Stringified SDP of the remote user "
              }
          }
      },
      "ssrcInfoObj": {
          "type": "object",
          "required": [
              "ssrc",
              "cname",
              "streamType",
              "reportType",
              "userID",
              "msid",
              "mslabel",
              "label",
              "localStartTime"
          ],
          "properties": {
              "ssrc": {
                  "type": "string",
                  "description":"Synchronization source, a 32 bit identifier in the RTP header (https://www.ietf.org/rfc/rfc3550.txt)"
              },
              "cname": {
                  "type": "string",
                  "description":"Canonical name, a persistent transport-level identifier taken from RTP (RFC3550)"
              },
              "streamType": {
                  "type": "string",
                  "enum": [
                      "inbound",
                      "outbound"
                  ]
              },
              "reportType": {
                  "type": "string",
                  "enum": [
                      "local",
                      "remote"
                  ]
              },
              "mediaType": {
                  "type": "string",
                  "enum": [
                      "audio",
                      "video",
                      "screen"
                  ]
              },
              "userID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "SSRC owner userID"
              },
              "msid": {
                  "type": "string",
                  "description": "msid is available on a= field of SDP message (https://webrtchacks.com/sdp-anatomy/#line39)"
              },
              "mslabel": {
                  "type": "string",
                  "description": "mslabel is available on a= field of SDP message (https://webrtchacks.com/sdp-anatomy/#line40)"
              },
              "label": {
                  "type": "string",
                  "description": "label is available on a= field of SDP message (https://webrtchacks.com/sdp-anatomy/#line41)"
              },
              "localStartTime": {
                  "type": "number",
                  "description": "Unix timestamp when the stream is started as reported by the local device clock"
              }
          }
      },
      "iceCandidatesObj": {
          "type": "object",
          "required": [
              "id",
              "localCandidateId",
              "remoteCandidateId",
              "state",
              "priority",
              "nominated"
          ],
          "properties": {
              "id": {
                  "type": "string",
                  "description": "as defined here: https://www.w3.org/TR/webrtc-stats/"
              },
              "localCandidateId": {
                  "type": "string",
                  "description": "Local candidate ID"
              },
              "remoteCandidateId": {
                  "type": "string",
                  "description": "Remote candidate ID"
              },
              "state": {
                  "type": "string",
                  "enum": [
                    "frozen", "waiting", "inprogress", "failed", "succeeded", "cancelled"
                  ]
              },
              "priority": {
                  "type": "integer",
                  "description": "Candidate priority"
              },
              "nominated": {
                  "type": "boolean",
                  "enum": ["true", "false"]
              }
          }
      },
      "fabricStatusBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "remoteID",
              "connectionID",
              "currIceCandidatePair",
              "currIceConnectionState",
              "prevIceConnectionState",
              "delay"

          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "currIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "failed"
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "disconnected", "completed"
                  ]
              },
              "delay": {
                  "type": "number",
                  "description": "delay in milliseconds (example: 3.5 seconds is 3500 in milliseconds)"
              }
          }
      },
      "userFeedbackBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "feedback"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer. Non-empty remoteID means that the feedback was given explicitly about the connection between these two parties. Otherwise it is regarded as general conference feedback."
              },
              "feedback": {
                  "type": "object",
                  "required": [
                      "overallRating"
                  ],
                  "properties": {
                      "overallRating": {
                          "type": "integer",
                          "description": "Rating from 1 to 5 (MOS score- https://en.wikipedia.org/wiki/Mean_opinion_score)"
                      },
                      "videoQualityRating": {
                          "type": "integer",
                          "description": "Rating from 1 to 5"
                      },
                      "audioQualityRating": {
                          "type": "integer",
                          "description": "Rating from 1 to 5"
                      },
                      "comments": {
                          "type": "string",
                          "description": "Comments from the participant"
                      }
                  }
              }
          }
      },
      "dominantSpeakerBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              }
          }
      },
      "statsData": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "remoteID",
              "connectionID",
              "stats"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "stats": {
                  "type": "array",
                  "description": "An array of stats objects",
                  "items": {
                      "type": "object"
                  }
              }
          }
      },
      "systemStatusBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "cpuUsage": {
                  "type": "number",
                  "description" : "CPU level in percentage"
              },
              "batteryLevel": {
                  "type": "number",
                  "description" : "Battery level in percentage"
              },
              "memoryUsage": {
                  "type": "number",
                  "description" : "Memory usage in MB"
              },
              "totalMemory": {
                  "type": "number",
                  "description" : "Total memory in MB"
              },
              "threadCount": {
                  "type": "number",
                  "description" : "Number of threads"
              }
          }
      },
      "fabricBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "eventType",
              "remoteID",
              "connectionID",
              "fabricTransmissionDirection",
              "remoteEndpointType"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "delay": {
                  "type": "number",
                  "description":"Total time (in milliseconds) to setup a conference for the participant. The time when the user joins until the chosen candidate pair is connected (setup/failure)"
              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "iceGatheringDelay": {
                  "type": "number",
                  "description": "The time (in milliseconds) taken for the ICE gathering to finish (ICE gathering state from new to complete)"
              },
              "iceConnectivityDelay": {
                  "type": "number",
                  "description": "The time (in milliseconds) taken for the ICE to establish the connectivity (ICE connection state new to connected/completed)"
              },
              "fabricTransmissionDirection": {
                  "type": "string",
                  "enum": [
                      "sendonly", "receiveonly", "sendrecv"
                  ]
              },
              "remoteEndpointType": {
                  "type": "string",
                  "enum": [
                      "peer", "server"
                  ]
              },
              "localIceCandidates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesLocal"
                  }
              },
              "remoteIceCandidates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesRemote"
                  }
              },
              "iceCandidatePairs": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesObj"
                  }
              }

          }
      },
      "iceCandidatesLocal": {
          "type": "object",
          "required": [
              "id",
              "type",
              "ip",
              "port",
              "candidateType",
              "transport"
          ],
          "properties": {
              "id": {
                  "type": "string",
                  "description": "as defined here: https://www.w3.org/TR/webrtc-stats/"
              },
              "type": {
                  "type": "string",
                  "enum": [
                    "localcandidate", "local-candidate"
                  ]
              },
              "ip": {
                  "type": "string",
                  "description": "A valid IPv4 or IPv6 address"
              },
              "port": {
                  "type": "integer",
                  "description": "non-zero port"
              },
              "candidateType": {
                  "type": "string",
                  "enum": [
                    "host", "srflx", "prflx", "relay", "stun", "serverreflexive", "peerreflexive", "turn", "relayed", "local"
                  ]
              },
              "transport": {
                  "type": "string",
                  "enum": ["tcp", "udp"]
              }
          }
      },
      "iceCandidatesRemote": {
          "type": "object",
          "required": [
              "id",
              "type",
              "ip",
              "port",
              "candidateType",
              "transport"
          ],
          "properties": {
              "id": {
                  "type": "string",
                  "description": "as defined here: https://www.w3.org/TR/webrtc-stats/"
              },
              "type": {
                  "type": "string",
                  "enum": [
                    "remotecandidate", "remote-candidate"
                  ]
              },
              "ip": {
                  "type": "string",
                  "description": "A valid IPv4 or IPv6 address"
              },
              "port": {
                  "type": "integer",
                  "description": "non-zero port"
              },
              "candidateType": {
                  "type": "string",
                  "enum": [
                    "host", "srflx", "prflx", "relay", "stun", "serverreflexive", "peerreflexive", "turn", "relayed", "local"
                  ]
              },
              "transport": {
                  "type": "string",
                  "enum": ["tcp", "udp"]
              }
          }
      },
      "fabricSetupFailedBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "reason",
              "name",
              "message"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "reason": {
                  "type": "string",
                  "enum": [
                      "MediaConfigError",
                      "MediaPermissionError",
                      "MediaDeviceError",
                      "NegotiationFailure",
                      "SDPGenerationError",
                      "TransportFailure",
                      "SignalingError",
                      "IceConnectionFailure"
                  ]
              },
              "name": {
                  "type": "string",
                  "description": "name"
              },
              "message": {
                  "type": "string",
                  "description": "message"
              },
              "stack": {
                  "type": "string",
                  "description": "stack"
              }

          }
      },
      "fabricTerminatedBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "remoteID",
              "connectionID"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              }
          }
      },
      "bridgeStatsBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "cpuUsage": {
                  "type": "number",
                  "description" : "CPU level in percentage"
              },
              "batteryLevel": {
                  "type": "number",
                  "description" : "Battery level in percentage"
              },
              "memoryUsage": {
                  "type": "number",
                  "description" : "Memory usage in MB"
              },
              "totalMemory": {
                  "type": "number",
                  "description" : "Total memory in MB"
              },
              "threadCount": {
                  "type": "number",
                  "description" : "Number of threads"
              },
              "intervalSentBytes": {
                  "type": "number",
                  "description" : "Number of sent bytes"
              },
              "intervalReceivedBytes": {
                  "type": "number",
                  "description" : "Number of received bytes"
              },
              "intervalRtpFractionLoss": {
                  "type": "number",
                  "description" : "Fractional loss"
              },
              "totalRtpLostPackets": {
                  "type": "number",
                  "description" : "Number of lost packets"
              },
              "intervalAverageRtt": {
                  "type": "number",
                  "description" : "Average RTT"
              },
              "intervalAverageJitter": {
                  "type": "number",
                  "description" : "Average jitter"
              },
              "intervalDownloadBitrate": {
                  "type": "number",
                  "description" : "Download bitrate of the bridge"
              },
              "intervalUploadBitrate": {
                  "type": "number",
                  "description" : "Upload bitrate of the bridge"
              },
              "audioFabricCount": {
                  "type": "number",
                  "description" : "Number of audio fabrics on the bridge"
              },
              "videoFabricCount": {
                  "type": "number",
                  "description" : "Number of video fabrics on the bridge"
              },
              "conferenceCount": {
                  "type": "number",
                  "description" : "Number of conferences on the bridge"
              },
              "participantCount": {
                  "type": "number",
                  "description" : "Number of participants on the bridge"
              }

          }
      },
      "mediaActionsBody": {
          "type": "object",
          "required": [
              "eventType",
              "localID",
              "deviceID",
              "timestamp",
              "mediaDeviceID",
              "remoteIDList"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "enum": ["audioMute", "audioUnmute", "screenShareStart", "screenShareStop", "videoPause", "videoResume"]
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "mediaDeviceID": {
                  "type": "string",
                  "description" : "Media Device ID"
              },
              "remoteIDList": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  },
                  "description" : "Array of remoteIDs separated by a comma, at least one remoteID should be listed"

              }
            }
      },
      "mediaPipelineBody": {
          "type": "object",
          "required": [
              "eventType",
              "localID",
              "deviceID",
              "timestamp",
              "ssrc"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "enum": ["mediaPlaybackStart", "mediaPlaybackSuspended", "mediaPlaybackStalled", "oneWayMedia"]
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "ssrc": {
                  "type": "integer",
                  "description" : "Stringified integer of SSRC ID (SSRC is not required for the event: oneWayMedia)"
              }
            }
      },
      "fabricActionsBody": {
          "type": "object",
          "required": [
              "eventType",
              "localID",
              "deviceID",
              "timestamp",
              "remoteID",
              "connectionID"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "enum": ["fabricHold", "fabricResume"]
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              }
          }
      },
      "devicelistBody": {
          "type": "object",
          "required": [
              "localID",
              "deviceID",
              "timestamp",
              "eventType",
              "mediaDeviceList"
          ],
          "properties": {
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."
              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "mediaDeviceList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/mediaDeviceObj"
                  }
              },
              "eventType": {
                  "type": "string",
                  "enum": [
                      "connectedDeviceList",
                      "activeDeviceList"
                  ]
              }
          }
      },
      "mediaDeviceObj": {
          "type": "object",
          "required": [
              "groupID",
              "kind"

          ],
          "properties": {
              "mediaDeviceID": {
                  "type": "string",
                  "description":"It is obtained from mediaDevices.enumerateDevices() API or similar API in native clients (e.g. https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices)"
              },
              "kind": {
                  "type": "string",
                  "enum": [   "audioinput",
                              "audiooutput",
                               "videoinput"
                          ]
              },
              "label": {
                  "type": "string",
                  "description" : "Input device name (example: external USB Webcam)"
              },
              "groupID": {
                  "type": "string",
                  "description": "Group identifier of the device (note: two devices belong to the same group identifier only if they belong to the same physical device)"
              }
          }
      },
      "iceDisruptionStartBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "currIceCandidatePair",
            "currIceConnectionState",
            "prevIceConnectionState"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceDisruptionStart"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "currIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "disconnected"
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "connected", "completed"
                  ]
              }

          }
      },
      "iceDisruptionEndBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "currIceCandidatePair",
            "prevIceCandidatePair",
            "currIceConnectionState",
            "prevIceConnectionState",
            "delay"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceDisruptionEnd"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "currIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "prevIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "currIceConnectionState": {
                  "type": "string",
                  "enum": ["connected", "completed", "checking"]
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "description": "disconnected"
              },
              "delay": {
                  "type": "number",
                  "description": "delay in milliseconds (example: 3.5 seconds is 3500 in milliseconds)"
              }

          }
      },
      "iceRestartedBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "prevIceCandidatePair",
            "currIceConnectionState",
            "prevIceConnectionState"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceRestarted"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "prevIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "new"
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "checking", "connected", "completed", "failed", "disconnected", "closed"
                  ]
              }

          }
      },
      "iceFailedBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "currIceConnectionState",
            "prevIceConnectionState",
            "delay"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceFailed"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "localIceCandidates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesLocal"
                  }
              },
              "remoteIceCandidates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesRemote"
                  }
              },
              "iceCandidatePairs": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesObj"
                  }
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "failed"
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "checking", "disconnected"
                  ]
              },
              "delay": {
                  "type": "number",
                  "description": "delay in milliseconds (example: 3.5 seconds is 3500 in milliseconds)"
              }

          }
      },
      "iceAbortedBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "currIceConnectionState",
            "prevIceConnectionState",
            "delay"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceFailed"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "localIceCandidates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesLocal"
                  }
              },
              "remoteIceCandidates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesRemote"
                  }
              },
              "iceCandidatePairs": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/iceCandidatesObj"
                  }
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "closed"
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "checking", "new"
                  ]
              },
              "delay": {
                  "type": "number",
                  "description": "delay in milliseconds (example: 3.5 seconds is 3500 in milliseconds)"
              }

          }
      },
      "iceTerminatedBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "prevIceCandidatePair",
            "currIceConnectionState",
            "prevIceConnectionState"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceTerminated"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "prevIceCandidatePair": {
                  "$ref": "#/definitions/iceCandidatesObj"
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "closed"
              },
              "prevIceConnectionState": {
                  "type": "string",
                  "enum": [
                    "connected", "completed", "failed", "disconnected"
                  ]
              }

          }
      },
      "iceConnectionDisruptionStartBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "currIceConnectionState",
            "prevIceConnectionState"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceConnectionDisruptionStart"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "disconnected"
              },
              "prevIceConnectionState": {
                "type": "string",
                "description": "checking"
              }

          }
      },
      "iceConnectionDisruptionEndBody": {
          "type": "object",
          "required": [
            "eventType",
            "localID",
            "deviceID",
            "timestamp",
            "remoteID",
            "connectionID",
            "currIceConnectionState",
            "prevIceConnectionState",
            "delay"

          ],
          "properties": {
            "eventType": {
                "type": "string",
                "description": "iceConnectionDisruptionEnd"
            },
              "localID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "originID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "ID of the endpoint connecting to the middlebox"
              },
              "deviceID": {
                  "type": "string",
                  "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
              },
              "timestamp": {
                  "type": "number",
                  "description":"Unix timestamp with a precision of milliseconds (example:  1483228800537.518)"
              },
              "remoteID": {
                  "type": "string",
                  "maxLength": 128,
                  "description": "It is provided by the developer and MUST NOT be null or empty."

              },
              "connectionID": {
                  "type": "string",
                  "description":"Unique identifier (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol) of connection between two endpoints. This identifier should remain the same throughout the life-time of the connection. "
              },
              "currIceConnectionState": {
                  "type": "string",
                  "description": "checking"
              },
              "prevIceConnectionState": {
                "type": "string",
                "description": "disconnected"
              },
              "delay": {
                  "type": "number",
                  "description": "delay in milliseconds (example: 3.5 seconds is 3500 in milliseconds)"
              }

          }
      },
}

}
