{
    "swagger": "2.0",
    "info": {
        "title": "callstats REST API",
        "description": "
        Monitor any real-time app with the callstats API\n
        # Steps to integrate\n
        All the messages between the WebRTC endpoint and the REST API during the call are shown in the following figures, represented as sequence diagrams.\n 
        ## Step 1\n
        At the beginning of the call, the service needs to be authenticated. When the authentication succeeds, a 'token' is sent back to the WebRTC endpoint. The received 'token' is then used for sending events and stats.\n
        <img src='images/step1-MessageFlowRESTAPI.png' />\n
        After the authentication process is completed, the endpoint initiates the monitoring process by a sending userJoined event along with the newly acquired 'token'. In case of success the response contains ucID. By acquiring ucID and 'token' the endpoint allowed to send events and stats.\n
        ## Step 2\n
        Throughout the duration of the call the WebRTC endpoint is obligated to send userAlive event in every 10 seconds. For initiating the call the endpoint requires to send fabricSetup event.\n
        <img src='images/step2-MessageFlowRESTAPI.png' />\n
        ## Step 3\n
        WebRTC endpoint can now send stats to REST API regularly and  all the stats messages are acknowledged.\n
        <img src='images/step3-MessageFlowRESTAPI.png' />\n
        ## Step 4\n
        The WebRTC endpoint informs the REST API about the end of the call by sending fabricTermination event. After the event is acknowledged, the endpoint sends the userLeft event, which removes the user from the conference. Once the last participant sends the userLeft event,  the conference is terminated.\n
        <img src='images/step4-MessageFlowRESTAPI.png' />\n

        ",
        "version": "1.0.0"
    },
    "host": "HOSTNAME",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/authenticate": {
            "post": {
                "externalDocs": {
                    "url": "//tools.ietf.org/html/rfc6749#section-4.1.3",
                    "description": "OAuth2 Access Token Request"
                },
                "summary": "Returns an access token",
                "description": "<b>HOSTNAME: auth.callstats.io</b><br />",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "grant_type",
                        "required": true,
                        "in": "formData",
                        "description": "Must be set to \"authorization_code\"",
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "required": true,
                        "in": "formData",
                        "description": "JWT signed ApplicationToken with alg set to ES256",
                        "type": "string"
                    },
                    {
                        "name": "client_id",
                        "required": true,
                        "in": "formData",
                        "description": "localID@appID ( localID is provided by the developer and MUST NOT be null or empty and Application ID is obtained from callstats.io)",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "A new token",
                        "schema": {
                            "$ref": "#/definitions/AccessToken"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/AuthenticationError"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/AuthenticationError"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}": {
            "post": {
                "summary": "UserJoined / Create conference Event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />This is the first step to add a new participant to the list of conference participants or start a new conference. If there are no participants in the given conference then a new conference will be created with the conferenceID provided.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserJoinedMessageBody"
                        }
                    }
                ],
                "tags": [
                    "User Action Events"
                ],
                "responses": {
                    "200": {
                        "description": "Conference successfully joined/created.",
                        "schema": {
                            "$ref": "#/definitions/ucIDResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/user/alive": {
            "post": {
                "summary": "UserAlive Event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />UserAlive makes sure that the user is present in the conference\n. We recommend you send this event every 10 seconds.\n If there is no userAlive event from a particular user for more than 30 seconds, we assume that the user has left the conference.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommonHeaderParams"
                        }
                    }
                ],
                "tags": [
                    "User Action Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/user/left": {
            "post": {
                "summary": "UserLeft Event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />UserLeft event should be sent when a user leaves the conference.\nThis event removes the user from the list of conference participants.\nThe conference will be closed when all the users have left or timed out.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommonHeaderParams"
                        }
                    }
                ],
                "tags": [
                    "User Action Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/devices/list": {
            "post": {
                "summary": "Submitting connected/active devices",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />Information about the connected and/or active media devices.\nAvailable eventTypes are given below:\n   - connectedDeviceList (All the media devices connected to the endpoint) \n   - activeDeviceList (Active media devices used by the endpoint) \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/devicelistBody"
                        }
                    }
                ],
                "tags": [
                    "User Media Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/media/actions": {
            "post": {
                "summary": "Submitting UserMedia Events",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />There are several user events related to media, for example, a user can mute the audio or unmute the audio. Such events can be reported to callstats.io via user media events:\n   - audioMute (user muted the audio) \n   - audioUnMute (user unmuted the audio) \n   - videoPause (video paused by the user) \n   - videoResume (video resumed by the user) \n   - screenShareStart (user started screensharing) \n   - screenShareStop (user stopped screensharing) \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mediaActionBody"
                        }
                    }
                ],
                "tags": [
                    "User Media Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/fabric": {
            "post": {
                "summary": "Submitting network related events",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />These are connection related events, there are three fabric events possible\n  - fabricSetup (connection is setup and you can send data) \n  - fabricSetupFailed (connection failed and you cannot send data) \n  - fabricTerminated (connection ended and you cannot send data) \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fabricBody"
                        }
                    }
                ],
                "tags": [
                    "Fabric Events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/feedback": {
            "post": {
                "summary": "Submitting Conference user feedback",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />You can submit overall rating to conference and add comments as well. It is also possible to give separate ratings for audio and video.\n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userFeedbackBody"
                        }
                    }
                ],
                "tags": [
                    "special events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/events/dominantspeaker": {
            "post": {
                "summary": "Submitting dominantspeaker event",
                "description": "<b>HOSTNAME: events.callstats.io</b><br />Using this event, you can specify the dominant speaker of the conference. For reference you can check this link: http://www.sciencedirect.com/science/article/pii/S0885230812000186 \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dominantSpeakerBody"
                        }
                    }
                ],
                "tags": [
                    "special events"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        },
        "/v1/apps/{appID}/conferences/{confID}/{ucID}/stats": {
            "post": {
                "summary": "Submitting Conference stats",
                "description": "<b>HOSTNAME: stats.callstats.io</b><br />All the conference stats inlcuding tracks, candidatePairs,trasnports, msts, dataChannels, codes and timestamps can be submitted using this event. For the time being tracks, candidatePairs and timestamp are mandatory fields. \n",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Header name has to be 'Authorization' and value 'Bearer ' + token returned by authenticate (e.g. Authorization: Bearer mF_9.B5f-4.1JqM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appID",
                        "in": "path",
                        "description": "Application ID is obtained from callstats.io",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "confID",
                        "in": "path",
                        "description": "Conference ID is generated by the origin server",
                        "required": true,
                        "type": "string",
                        "maxLength": "256"
                    },
                    {
                        "name": "ucID",
                        "in": "path",
                        "description": "A unique conference ID returned by callstats.io, when a new user joins or a conference is created",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Request payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/statsData"
                        }
                    }
                ],
                "tags": [
                    "Stats submission"
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully received.",
                        "schema": {
                            "$ref": "#/definitions/successResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequest"
                        }
                    },
                    "401": {
                        "description": "Invalid authentication token.",
                        "schema": {
                            "$ref": "#/definitions/unauthorizedRequest"
                        }
                    },
                    "422": {
                        "description": "Invalid request body data.",
                        "schema": {
                            "$ref": "#/definitions/invalidRequestBody"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internalServerResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/serviceUnavailableResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "endpointInfo": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "browser",
                        "native",
                        "plugin",
                        "middlebox"
                    ]  
                },
                "os": {
                    "type": "string",
                    "description":"Operating System name"
                },
                "osVersion": {
                    "type": "string",
                    "description":"Operating System version"
                },
                "buildName": {
                    "type": "string",
                    "description":"Name of the platform that runs the application (example: Chrome or FireFox or Edge or Safari or WebView (https://developer.chrome.com/multidevice/webview/overview) or plugin or Electron or node-webkit(https://github.com/nwjs/nw.js/wiki))"
                },
                "buildVersion": {
                    "type": "string",
                    "description":"Version associated with the platform"
                },
                "appVersion": {
                    "type": "string",
                    "description":"Version of your application "
                }
            }
        },
        "CommonHeaderParams": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                   
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                }
            }
        },
        "UserJoinedMessageBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "endpointInfo"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "endpointInfo": {
                    "$ref": "#/definitions/endpointInfo"
                }
            }
        },
        "ucIDResponse": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "default": "success",
                    "description": "Always \"success\""
                },
                "ucID": {
                    "type": "string",
                    "description": "Unique identifier"
                }
            }
        },
        "successResponse": {
            "type": "object",
            "required": [
                "status",
                "msg"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "default": "success",
                    "description": "Always \"success\""
                },
                "msg": {
                    "type": "string",
                    "description": "Error message"
                }
            }
        },
        "invalidRequest": {
            "type": "object",
            "required": [
                "status",
                "msg"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "default": "error",
                    "description": "Always \"error\""
                },
                "msg": {
                    "type": "string",
                    "description": "Error message"
                }
            }
        },
        "unauthorizedRequest": {
            "type": "object",
            "required": [
                "status",
                "msg"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "default": "error",
                    "description": "Always \"error\""
                },
                "msg": {
                    "type": "string",
                    "description": "Error message"
                }
            }
        },
        "invalidRequestBody": {
            "type": "object",
            "required": [
                "status",
                "msg"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "default": "error",
                    "description": "Always \"error\""
                },
                "msg": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "internalServerResponse": {
            "type": "object",
            "required": [
                "status",
                "msg"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "default": "error",
                    "description": "Always \"error\""
                },
                "msg": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "serviceUnavailableResponse": {
            "type": "object",
            "required": [
                "status",
                "msg"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "default": "error",
                    "description": "Always \"error\""
                },
                "msg": {
                    "type": "string",
                    "description": "Error message"
                }
            }
        },
        "mediaActionBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "eventType",
                "mediaDeviceID",
                "remoteIDList"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                    
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "mediaDeviceID": {
                    "type": "string",
                    "description":"It is obtained from mediaDevices.enumerateDevices() API or similar API in native clients (e.g. https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices)"
                },
                "eventType": {
                    "type": "string",
                    "enum": [
                        "audioMute",
                        "audioUnMute",
                        "videoPause",
                        "videoResume",
                        "screenShareStart",
                        "screenShareStop"
                    ]
                },
                "remoteIDList": {
                    "type": "array",
                    "description" : "List of targeted endpoint IDs",
                    "items": {
                        "type": "string",
                    }
                }
            }
        },
        "devicelistBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "eventType",
                "mediaDeviceList"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "mediaDeviceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mediaDeviceObj"
                    }
                },
                "eventType": {
                    "type": "string",
                    "enum": [
                        "connectedDeviceList",
                        "activeDeviceList"
                    ]
                }
            }
        },
        "mediaPipelineBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "eventType",
                "ssrc"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "ssrc": {
                    "type": "string",
                    "description":"Synchronization source, a 32 bit identifier in the RTP header (https://www.ietf.org/rfc/rfc3550.txt)"
                },
                "eventType": {
                    "type": "string",
                    "enum": [
                        "mediaPlaybackStart",
                        "mediaPlaybackSuspended",
                        "mediaPlaybackStalled"
                    ]
                }
            }
        },
        "fabricBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "eventType",
                "remoteID",
                "connectionID"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."

                },
                "delay": {
                    "type": "number",
                    "description":"Total time to setup a conference for the participant. The time when the user joins until the chosen candidate pair is connected (setup/failure)"
                },
                "connectionID": {
                    "type": "string",
                    "description":"Unique identifier of connection between two endpoints (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol)"
                },
                "iceGatheringDelay": {
                    "type": "number",
                    "description": "The time taken for the ICE gathering to finish (ICE gathering state from new to complete)"
                },
                "iceConnectivityDelay": {
                    "type": "number",
                    "description": "The time taken for the ICE to establish the connectivity (ICE connection state new to connected/completed)"
                },
                "localCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/iceCandidatesObj"
                    }
                },
                "remoteCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/iceCandidatesObj"
                    }
                },
                "reason": {
                    "type": "string",
                    "enum": [
                        "MediaConfigError",
                        "MediaPermissionError",
                        "MediaDeviceError",
                        "NegotiationFailure",
                        "SDPGenerationError",
                        "TransportFailure",
                        "SignalingError"
                    ]
                },
                "eventType": {
                    "type": "string",
                    "enum": [
                        "fabricSetup",
                        "fabricSetupFailed",
                        "fabricTerminated"
                    ]
                }
            }
        },
        "dominantSpeakerBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                }
            }
        },
        "userFeedbackBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "remoteID",
                "feedback"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "feedback": {
                    "type": "object",
                    "required": [
                        "overallRating"
                    ],
                    "properties": {
                        "overallRating": {
                            "type": "integer",
                            "description": "Rating from 1 to 5 (MOS score- https://en.wikipedia.org/wiki/Mean_opinion_score)"
                        },
                        "videoQualityRating": {
                            "type": "integer",
                            "description": "Rating from 1 to 5"
                        },
                        "audioQualityRating": {
                            "type": "integer",
                            "description": "Rating from 1 to 5"
                        },
                        "comments": {
                            "type": "string",
                            "description": "Comments from the participant"
                        }
                    }
                }
            }
        },
        "systemStatusBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "statusStats": {
                    "type": "object",
                    "properties": {
                        "cpuUsage": {
                            "type": "number"
                        },
                        "batteryLevel": {
                            "type": "number"
                        },
                        "memoryUsage": {
                            "type": "number"
                        },
                        "totalMemory": {
                            "type": "number"
                        },
                        "threadCount": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "statsData": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "remoteID",
                "connectionID",
                "stats"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "connectionID": {
                    "type": "string",
                    "description":"Unique identifier of connection between two endpoints (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "stats": {
                    "type": "object",
                    "required": [
                        "tracks",
                        "candidatePairs",
                        "timestamp"
                    ],
                    "properties": {
                        "tracks": {
                            "type": "array",
                            "description":" Is an array of objects of the RTCStatsType: 'inbound-rtp' and 'outbound-rtp'(These will containt statistics for RTP streams, RTCInboundRTPStreamStats and RTCOutboundRTPStreamStats, respectively. refer here: https://www.w3.org/TR/webrtc-stats for details)",
                            "items": {
                                "type": "object"
                            }
                        },
                        "candidatePairs": {
                            "type": "array",
                            "description":"ICE candidate pairs statistics related to the RTCIceTransport objects (all objects for which RTCStatsType is 'candidate-pair', refer: https://w3c.github.io/webrtc-stats/#dom-rtcstatstype)",
                            "items": {
                                "type": "object"
                            }
                        },
                        "transports": {
                            "type": "array",
                            "description":"Transport statistics realted to RTCPeerConnection objects (all objects for which RTCStatsType is 'transport', refer: https://w3c.github.io/webrtc-stats/#dom-rtcstatstype)",
                            "items": {
                                "type": "object"
                            }
                        },
                        "msts": {
                            "type": "array",
                            "description":"Contains statistics related to specific MST (all objects for which RTCStatsType is 'track', refer: https://w3c.github.io/webrtc-stats/#dom-rtcstatstype)",
                            "items": {
                                "type": "object"
                            }
                        },
                        "dataChannels": {
                            "type": "array",
                            "description":"Statistics related to each data channel (all objects for which RTCStatsType is 'data-channel', refer: https://w3c.github.io/webrtc-stats/#dom-rtcstatstype)",
                            "items": {
                                "type": "object"
                            }
                        },
                        "codecs": {
                            "type": "array",
                            "description":"Statistics of the codecs (all objects for which RTCStatsType is 'codec', refer: https://w3c.github.io/webrtc-stats/#dom-rtcstatstype)",
                            "items": {
                                "type": "object"
                            }
                        },
                        "timestamp": {
                            "type": "number",
                            "description": "Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                        }
                    }
                }
            }
        },
        "mediaDeviceObj": {
            "type": "object",
            "required": [
                "mediaDeviceID"
            ],
            "properties": {
                "mediaDeviceID": {
                    "type": "string",
                    "description":"It is obtained from mediaDevices.enumerateDevices() API or similar API in native clients (e.g. https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices)"
                },
                "kind": {
                    "type": "string",
                    "enum": [   "audioinput",
                                "audiooutput",
                                 "videoinput"
                            ]
                },
                "label": {
                    "type": "string",
                    "description" : "Input device name (example: external USB Webcam)"
                },
                "groupID": {
                    "type": "string",
                    "description": "Group identifier of the device (note: two devices belong to the same group identifier only if they belong to the same physical device)"
                }
            }
        },
        "fabricStateChangeBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "prevState",
                "newState",
                "changedState",
                "remoteID",
                "connectionID"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "connectionID": {
                    "type": "string",
                    "description":"Unique identifier of connection between two endpoints (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol)"
                },
                "prevState": {
                    "type": "string"
                },
                "newState": {
                    "type": "string"
                },
                "changedState": {
                    "type": "string",
                    "enum": [
                        "signalingState",
                        "iceConnectionState"
                    ]
                }
            }
        },
        "ssrcMapBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "ssrcData",
                "remoteID",
                "connectionID"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "connectionID": {
                    "type": "string",
                    "description":"Unique identifier of connection between two endpoints (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "ssrcData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssrcInfoObj"
                    }
                }
            }
        },
        "fabricTransportSwitchBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "remoteID",
                "connectionID",
                "currIceCandidatePair",
                "prevIceCandidatePair"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "connectionID": {
                    "type": "string",
                    "description":"Unique identifier of connection between two endpoints (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol)"
                },
                "currIceCandidatePair": {
                    "$ref": "#/definitions/iceCandidatesObj"
                },
                "prevIceCandidatePair": {
                    "$ref": "#/definitions/iceCandidatesObj"
                },
                "delay": {
                    "type": "number"
                },
                "relayType": {
                    "type": "string",
                    "enum": [
                        "turn/udp",
                        "turn/tcp",
                        "turn/tls",
                        ""
                    ]
                }
            }
        },
        "sdpSubmissionBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "remoteID",
                "connectionID"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "connectionID": {
                    "type": "string",
                    "description":"Unique identifier of connection between two endpoints (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "It is provided by the developer and MUST NOT be null or empty."
                },
                "localSDP": {
                    "type": "string",
                    "description": "Stringified SDP of the local user "
                },
                "remoteSDP": {
                    "type": "string",
                    "description":"Stringified SDP of the remote user "
                }
            }
        },
        "iceCandidatesObj": {
            "type": "object",
            "required": [
                "candidateID",
                "localPort",
                "localAddress",
                "remotePort",
                "remoteAddress",
                "protocol",
                "localCandidateType",
                "remoteCandidateType"
            ],
            "properties": {
                "candidateID": {
                    "type": "string",
                    "description": "as defined here: https://www.w3.org/TR/webrtc-stats/"
                },
                "localAddress": {
                    "type": "string",
                    "description": "Local address"
                },
                "localPort": {
                    "type": "integer",
                    "description": "Local port number"
                },
                "localCandidateType": {
                    "type": "string",
                    "enum": [
                        "host",
                        "srflx",
                        "prflx",
                        "relay",
                        "stun",
                        "serverreflexive",
                        "peerreflexive",
                        "turn",
                        "relayed",
                        "local"
                    ]
                },
                "remoteAddress": {
                    "type": "string",
                    "description": "Remote address"
                },
                "remotePort": {
                    "type": "integer",
                    "description": "Remote port number"
                },
                "remoteCandidateType": {
                    "type": "string",
                    "enum": [
                        "host",
                        "srflx",
                        "prflx",
                        "relay",
                        "stun",
                        "serverreflexive",
                        "peerreflexive",
                        "turn",
                        "relayed",
                        "local"
                    ]
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "iceStatusBody": {
            "type": "object",
            "required": [
                "localID",
                "deviceID",
                "timestamp",
                "remoteID",
                "connectionID",
                "eventType"
            ],
            "properties": {
                "localID": {
                    "type": "string",
                    "maxLength": "128"
                },
                "deviceID": {
                    "type": "string",
                    "description": "Unique string persistent over device lifetime (e.g. Hash of android.provider.Settings.Secure.ANDROID_ID)"
                },
                "timestamp": {
                    "type": "number",
                    "description":"Unix timestamp with precision higher than 1 second (example: 1483228800.537)"
                },
                "remoteID": {
                    "type": "string",
                    "maxLength": "128"
                },
                "connectionID": {
                    "type": "string",
                    "description":"Unique identifier of connection between two endpoints (example: Hash of Source IP||Source Port||Destination IP||Destination Port||Transport Protocol)"
                },
                "currIceCandidatePair": {
                    "$ref": "#/definitions/iceCandidatesObj"
                },
                "prevIceCandidatePair": {
                    "$ref": "#/definitions/iceCandidatesObj"
                },
                "currIceCandidateState": {
                    "type": "string"
                },
                "prevIceCandidateState": {
                    "type": "string"
                },
                "delay": {
                    "type": "number"
                },
                "eventType": {
                    "type": "string",
                    "enum": [
                        "iceDisruptionStart",
                        "iceDisruptionEnd",
                        "iceRestarted",
                        "iceFailed",
                        "iceAborted",
                        "iceTerminated",
                        "iceConnectionDisruptionStart",
                        "iceConnectionDisruptionEnd"
                    ]
                }
            }
        },
        "ssrcInfoObj": {
            "type": "object",
            "required": [
                "ssrc",
                "cname",
                "streamType",
                "userID",
                "msid",
                "mslabel",
                "label",
                "localStartTime"
            ],
            "properties": {
                "ssrc": {
                    "type": "string",
                    "description":"Synchronization source, a 32 bit identifier in the RTP header (https://www.ietf.org/rfc/rfc3550.txt)"
                },
                "cname": {
                    "type": "string",
                    "description":"Canonical name, a persistent transport-level identifier taken from RTP (RFC3550)"
                },
                "streamType": {
                    "type": "string",
                    "enum": [
                        "inbound",
                        "outbound"
                    ]
                },
                "reportType": {
                    "type": "string",
                    "enum": [
                        "local",
                        "remote"
                    ]
                },
                "mediaType": {
                    "type": "string",
                    "enum": [
                        "audio",
                        "video",
                        "screen"
                    ]
                },
                "userID": {
                    "type": "string",
                    "maxLength": "128",
                    "description": "SSRC owner userID"
                },
                "msid": {
                    "type": "string",
                    "description": "msid is available on a= field of SDP message (https://webrtchacks.com/sdp-anatomy/#line39)"
                },
                "mslabel": {
                    "type": "string",
                    "description": "mslabel is available on a= field of SDP message (https://webrtchacks.com/sdp-anatomy/#line40)"
                },
                "label": {
                    "type": "string",
                    "description": "label is available on a= field of SDP message (https://webrtchacks.com/sdp-anatomy/#line41)"
                },
                "localStartTime": {
                    "type": "number",
                    "description": "Unix timestamp when the stream is started as reported by the local device clock"
                }
            }
        },
        "AccessToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "-064b-4a76-8a2d-d686ec773992"
                },
                "expires_in": {
                    "type": "integer",
                    "example": 3600
                },
                "token_type": {
                    "type": "string",
                    "example": "bearer"
                }
            }
        },
        "AuthenticationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid_request"
                },
                "errorReason": {
                    "type": "string",
                    "description": "Human readable error reason"
                },
                "urn:x-callstats:auth:errorActions": {
                    "description": "Suggested actions (e.g. retry, retry with new token, report error)",
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        }
    }
}
